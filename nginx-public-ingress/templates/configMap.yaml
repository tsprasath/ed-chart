apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-default
  namespace: {{ .Release.namespace }}
data:
  compression.conf: |
    # Compression
    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256; # 256Bytes
    gzip_proxied       any;
    gzip_vary          on;
    # Content types for compression
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    ;
  proxy-default.conf: |
    server {
      listen 80;
      listen [::]:80;
      server_name {{ .Values.domain }};
      # Limitting open connection per ip
      limit_conn limitbyaddr 400;
      return 301 https://{{ .Values.domain }}$request_uri;
    }
    server {
      listen                443 ssl;
      ssl_certificate       /etc/secrets/site.crt;
      ssl_certificate_key   /etc/secrets/site.key;
      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
      server_name *.{{ .Values.domain }} {{ .Values.domain }};
      # Limitting open connection per ip
      limit_conn limitbyaddr 400;
      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-SSL   on;
      proxy_set_header    X-Forwarded-Proto $scheme;
      ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
      resolver {{ .Values.nginx_private_ingress_ip }} valid=30s;
      # Mobile Devices Refresh token Endpoints
      location ~* ^/auth/v1/refresh/token  {
        rewrite ^/auth/(.*) /auth/$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
      }
      # Admin API Endpoints for sunbird realm fpr forgot password flow
      location ~ /auth/admin/realms/sunbird/users/ {
        rewrite ^/auth/(.*) /auth/$1 break;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_pass http://keycloak;
      }
      # Sunbird realm keycloak API endpoints
      location ~ /auth/realms/sunbird/(get-required-action-link|login-actions/(action-token|authenticate|required-action)|protocol/openid-connect/(auth|certs|logout|token|userinfo)|.well-known/openid-configuration) {
        rewrite ^/auth/(.*) /auth/$1 break;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_pass http://keycloak;
      }
      # Static Assets for keycloak endpoints with caching
      location ~ /auth/(resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css))|welcome-content/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css))) {
        # Enabling caching
        proxy_cache_key $proxy_host$request_uri;
        proxy_cache small_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        rewrite ^/auth/(.*) /auth/$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_pass http://keycloak;
      }
      # This is Caching mechanism for POST requests location search
      location ~ /learner/data/v1/location/search {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache medium_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      # Caching for content consumption
      location ~ /api/(content/v1/read|course/v1/hierarchy|course/v1/batch/read) {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache large_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 4m;
        # Increasing the proxy buffer size
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 16k;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_pass http://kong;
      }
      # This is Caching mechanism for Content search
      location ~ /api/content/v1/search {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache large_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 4m;
        # Increasing the proxy buffer size
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 16k;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_pass http://kong;
      }
      # This is Caching mechanism for POST requests
      location ~ /api/data/v1/form/read {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache small_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
      }
      location ~ /api/(framework/v1/read|data/v1/system/settings/get|org/v1/search|org/v2/search|data/v1/location/search) {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache medium_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_methods GET HEAD POST;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header    X-Forwarded-For   $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 16k;
        proxy_pass http://kong;
      }
      location /api/ {
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        if ( $arg_eHVyhwSdt ) {
          set $custom_header "Bearer $arg_eHVyhwSdt";
        }
        if ( $http_authorization ) {
          set $custom_header "$http_authorization";
        }
        include /etc/nginx/defaults.d/compression.conf;
        proxy_set_header Authorization $custom_header;
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header    X-Forwarded-For   $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
      }
      # Oauth2 config
      location /oauth2/ {
        set $target http://oauth2-proxy.logging.svc.cluster.local;
        proxy_set_header Host                    $host;
        proxy_set_header X-Real-IP               $remote_addr;
        proxy_set_header X-Scheme                $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass $target;
      }
      location = /oauth2/auth {
        set $target http://oauth2-proxy.logging.svc.cluster.local;
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Scheme         $scheme;
        # nginx auth_request includes headers but not body
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass $target;
      }
      location /graylog/ {
        auth_request /oauth2/auth;
        error_page 401 = /oauth2/sign_in;
        # Setting target url
        auth_request_set $target http://graylog.logging.svc.cluster.local;
        # pass information via X-User and X-Email headers to backend,
        # requires running with --set-xauthrequest flag
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;
        # if you enabled --cookie-refresh, this is needed for it to work with auth_request
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        add_header Set-Cookie $auth_cookie;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Graylog-User viewer;
        proxy_set_header X-Graylog-Server-URL https://{{ .Values.domain }}/graylog/;
        rewrite  ^/graylog/(.*)$  /$1  break;
        proxy_pass $target;
      }
      location /dashboard {
        return 301 /graylog/;
      }
      location /oauth3 {
        set $target http://oauth2-proxy.monitoring.svc.cluster.local;
        proxy_set_header Host                    $host;
        proxy_set_header X-Real-IP               $remote_addr;
        proxy_set_header X-Scheme                $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass $target;
      }
      location = /oauth3/auth {
        set $target http://oauth2-proxy.monitoring.svc.cluster.local;
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Scheme         $scheme;
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass $target;
      }
      location /grafana/ {
        auth_request /oauth3/auth;
        error_page 401 = /oauth3/sign_in;
        auth_request_set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
        include /etc/nginx/defaults.d/compression.conf;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
        rewrite ^/grafana/(.*) /$1 break;
        proxy_pass $target;
      }
      location /encryption/ {
        set $target http://encryption.dev.svc.cluster.local;
        rewrite ^/encryption/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 1;
        proxy_send_timeout 30;
        proxy_read_timeout 40;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass $target;
      }
      location /discussions/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        # Socket.IO Support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        set $target http://nodebb-service.dev.svc.cluster.local:4567;
        #rewrite ^/discussions/(.*) /$1 break;
        proxy_pass $target;
      }
      location ~* ^/assets/public/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*";
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/$url_full;
      }
      location ~* ^/content/preview/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*" ;
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/v3/preview/$url_full;
     }
     location ~ /content-editor/telemetry|collection-editor/telemetry {
        rewrite ^/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      location ~* ^/content-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*" ;
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/content-editor/$url_full;
      }
      location ~* ^/discussion-ui/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*" ;
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/discussion-ui/$url_full;
      }
      location ~* ^/collection-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*" ;
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/collection-editor/$url_full;
      }
      location ~* ^/generic-editor/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*" ;
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/generic-editor/$url_full;
      }
      location ~* ^/content-plugins/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip        on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "*" ;
            add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
            add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
            # add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        set $bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*";
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             $bucket/content-plugins/$url_full;
      }
      location /thirdparty {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;
        rewrite ^/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      location ~* ^/desktop/(.*) {
         # Enabling cache for Response code 200
         expires 1M;
         add_header Pragma public;
         add_header Cache-Control "public";
         # Enabling compression
         gzip            on;
         gzip_min_length 100000;
         gzip_proxied    expired no-cache no-store private auth;
         gzip_types application/javascript application/x-javascript text/css text/javascript;
         if ($request_method = OPTIONS ) {
             add_header Access-Control-Allow-Origin "*" ;
             add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
             add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
             # add_header Access-Control-Allow-Credentials "true";
             add_header Content-Length 0;
             add_header Content-Type text/plain;
             return 200;
        }
        set $offline_bucket        "https://{{ .Values.cloud_public_storage_accountname }}/{{ .Values.cloud_public_storage_container }}/dev-offlineinstaller";
        set $url_full         '$1';
        proxy_http_version     1.1;
        proxy_set_header       Host "{{ .Values.cloud_public_storage_accountname }}";
        proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*";
        add_header             Access-Control-Allow-Methods GET;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass             https://$offline_bucket/$url_full;
      }
      # compression for svg certs download
      location /api/certreg/v2/certs/download {
        rewrite ^/api/(.*) /$1 break;
        include /etc/nginx/defaults.d/compression.conf;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header    X-Forwarded-For   $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
      }
      location /learner/certreg/v2/certs/download {
        # Compression
        gzip on;
        gzip_comp_level    5;
        gzip_min_length    50000; # 50KB
        gzip_proxied       any;
        gzip_vary          on;
        # Content types for compression
        gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        add_header test hello;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      location / {
        rewrite ^/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      location /v3/device/register {
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
        proxy_set_header Connection "";
        rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
      }
      location /action/data/v3/metrics {
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
        proxy_set_header Connection "";
        rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
      }
      location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache medium_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://player;
      }
      location /api/channel/v1/read {
        # Enabling compression
        include /etc/nginx/defaults.d/compression.conf;
        # Enabling caching
        # caching include Accept-Encoding header also, to provide gziped or plain content as per request
        proxy_cache_key "$http_accept_encoding|$request_uri|$request_body";
        proxy_cache medium_cache;
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header X-Proxy-Cache-Date $upstream_http_date;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 5m;
        rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header    X-Forwarded-For   $remote_addr;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://kong;
      }
      location ~ ^/chatapi/ {
        set $target http://router-service.dev.svc.cluster.local:8000;
        rewrite ^/chatapi/(.*) /$1 break;
        proxy_pass $target;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
      }
      location /oauth2callback {
        return 200 'OK';
        add_header Content-Type text/plain;
      }
      location /dial/ {
        if ($dial_upstream_host = kong) {
            rewrite ^/dial/(.*) /api/dialcode/v2/read/$1;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 5;
        proxy_send_timeout 60;
        proxy_read_timeout 70;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_set_header X-Request-ID $sb_request_id;
        proxy_pass http://$dial_upstream_host;
      }
    }
  nginx.conf: |    
    server {
      listen 80;
      listen [::]:80;
      server_name {{ .Values.domain }};
      # Limitting open connection per ip
      limit_conn limitbyaddr 400;
      return 301 https://{{ .Values.domain }}$request_uri;
    }  